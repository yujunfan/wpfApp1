<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <GeometryGroup x:Key="clipGeometry" FillRule="Nonzero">
        <EllipseGeometry RadiusX="40" RadiusY="40" Center="40,40"></EllipseGeometry>
    </GeometryGroup>

    <Style x:Key="strackPlaneBackground" TargetType="StackPanel">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#FF00C3FF"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Background" Value="#FFF3F5F7"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="WindowTitleBackground" TargetType="Grid">
        <Setter Property="Background" Value="#FFFFFF"/>
    </Style>



    <Style x:Key="lsitBorderBackground" TargetType="Border">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                            <GradientStop Color="#FF0091FF" Offset="0"/>
                            <GradientStop Color="#FF00C4FF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                            <GradientStop Color="#FF0091FF" Offset="0"/>
                            <GradientStop Color="#FF00C4FF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ButtonBorderBackground" TargetType="Border">
        <Setter Property="CornerRadius" Value="3"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                            <GradientStop Color="#FFF2F2F2" Offset="0"/>
                            <GradientStop Color="#FFF2F2F2" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DockPanelPlaneBackground" TargetType="DockPanel">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#FF0091FF"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Background" Value="#FF7DBBEA"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="strackBorderBackground" TargetType="Border">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#4E7CED"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="false">
                <Setter Property="Background" Value="#4E7CED"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="texBoxStyle" TargetType="TextBox">

    </Style>


    <Style x:Key="GridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader" >
                    <DockPanel Style="{StaticResource DockPanelPlaneBackground}" Width="auto">
                        <Thumb x:Name="PART_HeaderGripper"
                              DockPanel.Dock="Right"
                              Width="1"
                              Margin="0,0,0,0"
                             
                              Style="{StaticResource MaterialDesignGridColumnHeaderGripper}" />
                        <Border x:Name="HeaderBorder"
                              
                               BorderThickness="1">
                            <ContentPresenter x:Name="HeaderContent"
                                             Margin="{TemplateBinding Padding}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             RecognizesAccessKey="True"
                                            
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </Border>
                    </DockPanel>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <DockPanel Name="PART_FloatingHeaderCanvas">
                                <Border BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="1" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="GroupSelectRadioButton_LeftV2" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="#425177"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <!--<Setter Property="Cursor" Value="Hand"/>-->
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Margin" Value="0,0,0,6" />
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  ClipToBounds="True" >
                        <Rectangle x:Name="ButtonStock"  Fill="{TemplateBinding Background}"  RadiusX="0" RadiusY="0" Margin="0,0,0,0" StrokeThickness="1"/>
                        <ContentPresenter VerticalAlignment="Center"   Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="1,1">
                                        <GradientStop Offset="0" Color="#F5F6FF" />
                                        <GradientStop Offset="1" Color="#4E7CED" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="1" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="GroupSelectRadioButton_Left2" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="#586B9A"/>
        <Setter Property="Padding" Value="12 6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Normal"></Setter>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Margin" Value="0,0,0,8" />
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  ClipToBounds="True" >
                        <Border CornerRadius="16" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="{TemplateBinding Height}" HorizontalAlignment="Center" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"></ContentPresenter>
                        </Border>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter Property="Background" Value="#4E7CED"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#4E7CED"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="1" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupSelectRadioButton_Left" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="#425177"/>
        <Setter Property="Padding" Value="28 0 0 0"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="Margin" Value="0,0,0,2" />
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="Radio_border" CornerRadius="16" Background="{TemplateBinding Background}">
                        <DockPanel>
                            <TextBlock Name="Radio_text" DockPanel.Dock="Left" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                        </DockPanel>
                    </Border>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Radio_border" Property="Background" Value="#4E7CED"/>
                            <Setter TargetName="Radio_text" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="#4E7CED"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#4E7CED"></Setter>
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Background" Value="white"></Setter>
                            <Setter Property="Foreground" Value="#425177"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlawStatisticsDGStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="EnableRowVirtualization" Value="False"></Setter>
        <Setter Property="GridLinesVisibility" Value="None"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="IsEnabled" Value="True"></Setter>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AreRowDetailsFrozen" Value="False"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="#EDEDED"/>
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="AlternationCount" Value="2"/>
    </Style>
    <Style x:Key="FlawStatisticsCellStyle" TargetType="DataGridCell">
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="BorderThickness" Value="0 0 1 1"/>
        <Setter Property="BorderBrush" Value="#ABABAB"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#FAFAFA" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlawStatisticsRowStyle" TargetType="DataGridRow">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Height" Value="60"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"
                        Value="0">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"
                        Value="1">
                <Setter Property="Background" Value="#FFFAFAFA" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#D2D2D2"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#D2D2D2" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--表数据样式-->
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"></Setter>
        <Setter Property="CellStyle" Value="{DynamicResource CellStyle}"></Setter>
        <Setter Property="RowStyle" Value="{DynamicResource RowStyle}"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="EnableRowVirtualization" Value="False"></Setter>
        <Setter Property="GridLinesVisibility" Value="None"></Setter>
        <Setter Property="CanUserAddRows" Value="False"></Setter>
        <Setter Property="MinHeight" Value="100"></Setter>
        <!--禁止在尾行手动添加数据-->
        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="IsEnabled" Value="True"></Setter>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AreRowDetailsFrozen" Value="False"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="BorderBrush" Value="#EDEDED"/>
        <Setter Property="EnableColumnVirtualization" Value="True"/>
        <Setter Property="EnableRowVirtualization" Value="True"/>
        <Setter Property="AlternationCount" Value="2"/>

    </Style>

    <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Width" Value="Auto"></Setter>
        <Setter Property="Background" Value="#f50"></Setter>
        <Setter Property="BorderThickness" Value="0 0 1 1"></Setter>
        <Setter Property="BorderBrush" Value="#EDEDED"></Setter>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="#425177"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>

        <!--水平居中-->
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <!--垂直居中-->
    </Style>

    <Style x:Key="ColumnHeaderRightStyle" TargetType="DataGridColumnHeader">

        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Background" Value="#FFF2F2F2"></Setter>
        <Setter Property="BorderThickness" Value="0 0 0 1"></Setter>
        <Setter Property="BorderBrush" Value="#EDEDED"></Setter>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>

        <!--水平居中-->
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <!--垂直居中-->
    </Style>

    <Style x:Key="RowStyle" TargetType="DataGridRow">

        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Height" Value="40"/>

        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Style.Triggers>

            <Trigger Property="ItemsControl.AlternationIndex"
                        Value="0">
                <Setter Property="Background" Value="#f50" />
            </Trigger>

            <Trigger Property="ItemsControl.AlternationIndex"
                        Value="1">
                <Setter Property="Background" Value="#f50" />
            </Trigger>


            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#f50"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#f50" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CellStyle" TargetType="DataGridCell">
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Foreground" Value="#425177"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Bg" Background="Transparent" BorderThickness="0 0 1 1" UseLayoutRounding="True" BorderBrush="#EDEDED">
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#FAFAFA" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CellStyleLeft" TargetType="DataGridCell">
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Padding" Value="20 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Bg" Background="Transparent" BorderThickness="1" UseLayoutRounding="True" BorderBrush="#EDEDED">
                        <ContentPresenter HorizontalAlignment="Left"  VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#FAFAFA" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="CellStyleTextLeft" TargetType="DataGridCell">
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Padding" Value="4 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Bg" Background="Transparent" BorderThickness="0 0 1 1" UseLayoutRounding="True" BorderBrush="#EDEDED">
                        <ContentPresenter HorizontalAlignment="Left"  VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#f50" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="CellStyleRightBorder" TargetType="DataGridCell">
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border x:Name="Bg" Background="Transparent" BorderThickness="0 0 0 1" UseLayoutRounding="True" BorderBrush="#EDEDED">
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"  Value="#FAFAFA" />
                <Setter Property="Foreground" Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="ListViewItemContainerStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="-1 -1 -1 0"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Grid.ShowGridLines" Value="True"/>




        <!--<Setter Property="Template">
           <Setter.Value>
               <ControlTemplate>
                   <Border BorderThickness="1" BorderBrush="Black" Margin="-1 -1 -1 0"/>
               </ControlTemplate>
           </Setter.Value>
       </Setter>-->


    </Style>

    <Style x:Key="RoundedGelButton" TargetType="Button">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Name="GelBackground" StrokeThickness="0.5" Fill="Gray">
                            <!--<Ellipse.Stroke>
                                   <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                       <GradientStop Offset="0" Color="#ff7e7e7e"></GradientStop>
                                       <GradientStop Offset="1" Color="Black"></GradientStop>
                                   </LinearGradientBrush>
                               </Ellipse.Stroke>-->
                        </Ellipse>
                        <!--<Ellipse Margin="15,5,15,50">
                               <Ellipse.Fill>
                                   <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                       <GradientStop Offset="0" Color="#aaffffff"></GradientStop>
                                       <GradientStop Offset="1" Color="Transparent"></GradientStop>
                                   </LinearGradientBrush>
                               </Ellipse.Fill>
                           </Ellipse>-->
                        <ContentPresenter Name="GelButtonContent" VerticalAlignment="Center" HorizontalAlignment="Center"
                                         Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Ellipse.Fill" TargetName="GelBackground" Value="DarkGray">
                                <!--<Setter.Value>
                                       <RadialGradientBrush>
                                           <GradientStop Offset="0" Color="Lime"></GradientStop>
                                           <GradientStop Offset="1" Color="DarkGreen"></GradientStop>
                                       </RadialGradientBrush>
                                   </Setter.Value>-->
                            </Setter>
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="True">
                               <Setter Property="Ellipse.Fill" TargetName="GelBackground">
                                   <Setter.Value>
                                       <RadialGradientBrush>
                                           <GradientStop Offset="0" Color="#ffcc34"></GradientStop>
                                           <GradientStop Offset="1" Color="#cc9900"></GradientStop>
                                       </RadialGradientBrush>
                                   </Setter.Value>
                               </Setter>
                           </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--模块title-->
    <Style TargetType="ContentControl" x:Key="CustomModalTitleStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Border Width="2" Height="13" Background="#4E7CED" VerticalAlignment="Center"/>
                        <ContentPresenter VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>